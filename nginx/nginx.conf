worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 50M;  # Allow larger file uploads

    # Logging settings
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
    error_log   logs/error.log;

    # Reverse proxy for LLM-utils web application
    server {
        listen       80;
        server_name  your_domain.com;  # Replace with your actual domain or public IP

        # LLM-utils Flask application
        location / {
            proxy_pass http://127.0.0.1:5000;  # Forward to Flask application
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support (if needed)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Long-running connections
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Ollama API service
        location /ollama/ {
            # 保持现有配置

            # 关键改动: 伪装请求来源为本地
            proxy_set_header Host "localhost";
            proxy_set_header Origin "http://localhost";
            proxy_set_header Referer "http://localhost";
            
            # 移除可能会透露真实源的头信息
            proxy_set_header X-Forwarded-For "";
            proxy_set_header X-Real-IP "";
            
            # 其他现有配置保持不变
            
            # 正确处理路径
            rewrite ^/ollama/(.*) /$1 break;
            proxy_pass http://127.0.0.1:11434/;
            
            # 更全面的请求头设置
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS 设置
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            # 处理 OPTIONS 请求
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Ollama可能有长时间运行的请求，增加超时时间
            proxy_read_timeout 600s;
            proxy_connect_timeout 90s;
            proxy_send_timeout 600s;
            
            # WebSocket支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 不缓存响应
            proxy_buffering off;
        }
    }
} 
